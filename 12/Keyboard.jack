// This file is part of nand2tetris, as taught in The Hebrew University,
// and was written by Aviv Yaish, and is published under the Creative
// Common Attribution-NonCommercial-ShareAlike 3.0 Unported License
// https://creativecommons.org/licenses/by-nc-sa/3.0/
// It is an extension to the specifications given in
// https://www.nand2tetris.org (Shimon Schocken and Noam Nisan, 2017)
// as allowed by the Creative Common Attribution-NonCommercial-ShareAlike 3.0
// File name: projects/12/Keyboard.jack

/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {
    static int kbd;

    /** Initializes the keyboard. */
    function void init() {
    let kbd = 24576;
    return;
    }

    /**
     * Returns the character of the currently pressed key on the keyboard;
     * if no key is currently pressed, returns 0.
     *
     * Recognizes all ASCII characters, as well as the following keys:
     * new line = 128 = String.newline()
     * backspace = 129 = String.backspace()
     * left arrow = 130
     * up arrow = 131
     * right arrow = 132
     * down arrow = 133
     * home = 134
     * End = 135
     * page up = 136
     * page down = 137
     * insert = 138
     * delete = 139
     * ESC = 140
     * F1 - F12 = 141 - 152
     */
    function char keyPressed() {
      var char key;

      let key = Memory.peek(kbd);

      return key;

    }

    /**
     * Waits until a key is pressed on the keyboard and released,
     * then echoes the key to the screen, and returns the character
     * of the pressed key.
     */
    function char readChar() {
    var char key;

    while(Keyboard.keyPressed() = 0) {}
    let key = Keyboard.keyPressed();
    while(~(Keyboard.keyPressed() = 0)){}

    do Output.printChar(key);
    return key;
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its value. Also handles user backspaces.
     */
    function String readLine(String message) {
    var String S;
    var char c;

    do Output.printString(message);

    let S = String.new(64);
    let c = Keyboard.readChar();

    while(~(c=String.newLine())){

        if (c = String.newLine()){
           do Output.println();
           return S;
        }
        if (c = String.backSpace()){
            do S.eraseLastChar();
        }
        else{
           let S = S.appendChar(c);
        }

        let c = Keyboard.readChar();
    }
    return S;


		// You can assume input is at most 64 characters long.
		// Why? Because this is the width of our screen!
    }

    /**
     * Displays the message on the screen, reads from the keyboard the entered
     * text until a newline character is detected, echoes the text to the screen,
     * and returns its integer value (until the first non-digit character in the
     * entered text is detected). Also handles user backspaces.
     */
    function int readInt(String message) {
    var String S;
    let S = Keyboard.readLine(message);

    return S.intValue();

    }
}
